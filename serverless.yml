service: fastapi-lambda

provider:
  name: aws
  runtime: python3.11
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
  logRetentionInDays: 30
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'

custom:
  pythonRequirements:
    layer:
      name: python-deps
      description: Python dependencies
    dockerizePip: true
    noDeploy:
      - coverage
      - pytest
      - pytest-cov
      - black
      - mypy
      - ruff
    useDownloadCache: true
    useStaticCache: true
    usePoetry: false
    requirementsPath: requirements.txt
    zip: true
    slim: true

functions:
  api:
    handler: src.main.handler
    name: ${self:service}-${self:provider.stage}
    memorySize: 256
    timeout: 30
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - httpApi:
          path: /{proxy+}
          method: '*'
    environment:
      API_ENV: ${self:provider.stage}

plugins:
  - serverless-python-requirements

package:
  patterns:
    - '!node_modules/**'
    - '!venv/**'
    - '!.venv/**'
    - '!__pycache__/**'
    - '!.pytest_cache/**'
    - '!.coverage'
    - '!tests/**'