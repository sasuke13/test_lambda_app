name: Deploy to Amplify

on:
  push:
    branches: [ main, amplify_deployment ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Amplify CLI
        run: |
          npm install -g @aws-amplify/cli
          amplify --version
        
      - name: Configure Amplify
        run: |
          APP_NAME="fastapi-lambda-app"
          
          # Pull existing Amplify environment
          amplify pull \
            --appId de7wiwdtok231 \
            --envName prod \
            --yes

      - name: Build and Package
        run: |
          # Install dependencies
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --without dev
          
          # Create deployment package
          mkdir -p amplify/backend/function/fastapi/src
          cp -r src/* amplify/backend/function/fastapi/src/
          cp pyproject.toml poetry.lock amplify/backend/function/fastapi/
          
          # Create the function zip
          cd amplify/backend/function/fastapi
          zip -r ../../../../function.zip ./*
          cd ../../../../
          
          # Upload to S3
          DEPLOYMENT_BUCKET=$(aws amplify get-backend-environment \
            --app-id de7wiwdtok231 \
            --environment-name prod \
            --query 'backendEnvironment.deploymentArtifacts' \
            --output text)
          
          aws s3 cp function.zip s3://${DEPLOYMENT_BUCKET}/amplify-builds/fastapi-prod-latest.zip

      - name: Deploy with Amplify
        run: |
          amplify push \
            --yes \
            --allow-destructive-updates
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }} 