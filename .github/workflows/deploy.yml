name: Deploy to Lambda

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Serverless Framework and plugins
        run: |
          npm install -g serverless
          npm install --save-dev serverless-python-requirements
          serverless --version

      - name: Verify Poetry installation
        run: |
          poetry --version
          poetry config --list
          poetry env info

      - name: Debug environment
        run: |
          pwd
          ls -la
          cat pyproject.toml
          docker info

      - name: Deploy with Serverless
        run: |
          SLS_DEBUG=* serverless deploy --stage prod --verbose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          PATH: ${{ env.PATH }}:${{ github.workspace }}/.local/bin
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_TOKEN }}
