name: Deploy to Lambda

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version
          
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-root
        
      - name: Build Lambda package and layer
        run: |
          poetry run python scripts/build_layer.py
          poetry run python scripts/build_lambda.py
          if [ ! -f lambda_function.zip ] || [ ! -f lambda_layer.zip ]; then
            echo "Build failed"
            exit 1
          fi
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Deploy Layer
        run: |
          echo "Publishing layer..."
          LAYER_VERSION=$(aws lambda publish-layer-version \
            --layer-name test-lambda-layer \
            --zip-file fileb://lambda_layer.zip \
            --compatible-runtimes python3.11 \
            --query 'Version' \
            --output text)
          echo "Layer version: $LAYER_VERSION"
          echo "LAYER_VERSION=$LAYER_VERSION" >> $GITHUB_ENV
          
      - name: Update Lambda Configuration
        run: |
          aws lambda update-function-configuration \
            --function-name test-lambda-function \
            --layers "arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:layer:test-lambda-layer:${{ env.LAYER_VERSION }}"
          
          # Wait for the configuration update to complete
          aws lambda wait function-updated \
            --function-name test-lambda-function
          
      - name: Deploy to Lambda
        run: |
          echo "Deploying to Lambda function..."
          aws lambda update-function-code \
            --function-name test-lambda-function \
            --zip-file fileb://lambda_function.zip \
            --publish
          
          # Verify deployment
          aws lambda wait function-updated \
            --function-name test-lambda-function
          
          echo "Deployment completed successfully"
